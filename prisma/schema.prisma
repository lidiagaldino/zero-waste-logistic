// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id               Int               @id @default(autoincrement())
  email            String
  senha            String
  telefone         String
  foto             String
  biografia        String?
  pessoa_fisica    PessoaFisica[]
  pessoa_juridica  PessoaJuridica[]
  catador          Catador[]
  endereco_usuario EnderecoUsuario[]
  gerador          Gerador[]

  @@map("tbl_usuario")
}

model PessoaFisica {
  id              Int      @id @default(autoincrement())
  cpf             String
  nome            String
  data_nascimento DateTime

  user       Usuario @relation(fields: [id_usuario], references: [id])
  id_usuario Int

  @@map("tbl_pessoa_fisica")
}

model PessoaJuridica {
  id            Int    @id @default(autoincrement())
  cnpj          String
  nome_fantasia String

  user       Usuario @relation(fields: [id_usuario], references: [id])
  id_usuario Int
}

model Catador {
  id                Int                @id @default(autoincrement())
  user              Usuario            @relation(fields: [id_usuario], references: [id])
  status            String?
  id_usuario        Int
  materiais_catador MateriaisCatador[]
  FavoritarCatador  FavoritarCatador[]
  Pedido            Pedido[]
}

model Materiais {
  id                Int                @id @default(autoincrement())
  nome              String
  materiais_catador MateriaisCatador[]
  MateriaisPedido   MateriaisPedido[]
}

model MateriaisCatador {
  id           Int       @id @default(autoincrement())
  material     Materiais @relation(fields: [id_materiais], references: [id])
  id_materiais Int
  catador      Catador   @relation(fields: [id_catador], references: [id])
  id_catador   Int
}

model Endereco {
  id               Int               @id @default(autoincrement())
  logradouro       String
  bairro           String
  cidade           String
  estado           String
  cep              String
  complemento      String?
  latitude         String
  longitude        String
  apelido          String
  numero           String
  endereco_usuario EnderecoUsuario[]
  Pedido           Pedido[]
}

model EnderecoUsuario {
  id          Int      @id @default(autoincrement())
  endereco    Endereco @relation(fields: [id_endereco], references: [id])
  usuario     Usuario  @relation(fields: [id_usuario], references: [id])
  id_endereco Int
  id_usuario  Int
}

model Gerador {
  id               Int                @id @default(autoincrement())
  user             Usuario            @relation(fields: [id_usuario], references: [id])
  id_usuario       Int
  FavoritarCatador FavoritarCatador[]
  Pedido           Pedido[]
}

model FavoritarCatador {
  id         Int     @id @default(autoincrement())
  catador    Catador @relation(fields: [id_catador], references: [id])
  id_catador Int
  gerador    Gerador @relation(fields: [id_gerador], references: [id])
  id_gerador Int
}

model MateriaisPedido {
  id          Int       @id @default(autoincrement())
  material    Materiais @relation(fields: [id_material], references: [id])
  id_material Int
  pedido      Pedido    @relation(fields: [id_pedido], references: [id])
  id_pedido   Int
}

model Pedido {
  id              Int               @id @default(autoincrement())
  created_at      DateTime          @default(now())
  status          String
  finished_at     DateTime?
  catador         Catador?          @relation(fields: [id_catador], references: [id])
  id_catador      Int?
  gerador         Gerador           @relation(fields: [id_gerador], references: [id])
  id_gerador      Int
  endereco        Endereco          @relation(fields: [id_endereco], references: [id])
  id_endereco     Int
  MateriaisPedido MateriaisPedido[]
}
